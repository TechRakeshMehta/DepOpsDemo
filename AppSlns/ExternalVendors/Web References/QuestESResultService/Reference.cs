//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace ExternalVendors.QuestESResultService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ESResultServiceSoap", Namespace="http://americandatabank.com/")]
    public partial class ESResultService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ReceiveCollectionResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiveCollectionStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiveLabTestResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiveLabReqStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ESResultService() {
            this.Url = global::ExternalVendors.Properties.Settings.Default.ExternalVendors_QuestESResultService_ESResultService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ReceiveCollectionResultCompletedEventHandler ReceiveCollectionResultCompleted;
        
        /// <remarks/>
        public event ReceiveCollectionStatusCompletedEventHandler ReceiveCollectionStatusCompleted;
        
        /// <remarks/>
        public event ReceiveLabTestResultCompletedEventHandler ReceiveLabTestResultCompleted;
        
        /// <remarks/>
        public event ReceiveLabReqStatusCompletedEventHandler ReceiveLabReqStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://americandatabank.com/ReceiveCollectionResult", RequestNamespace="http://americandatabank.com/", ResponseNamespace="http://americandatabank.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReceiveCollectionResult(string userName, string password, string collectionResultXML) {
            object[] results = this.Invoke("ReceiveCollectionResult", new object[] {
                        userName,
                        password,
                        collectionResultXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveCollectionResultAsync(string userName, string password, string collectionResultXML) {
            this.ReceiveCollectionResultAsync(userName, password, collectionResultXML, null);
        }
        
        /// <remarks/>
        public void ReceiveCollectionResultAsync(string userName, string password, string collectionResultXML, object userState) {
            if ((this.ReceiveCollectionResultOperationCompleted == null)) {
                this.ReceiveCollectionResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveCollectionResultOperationCompleted);
            }
            this.InvokeAsync("ReceiveCollectionResult", new object[] {
                        userName,
                        password,
                        collectionResultXML}, this.ReceiveCollectionResultOperationCompleted, userState);
        }
        
        private void OnReceiveCollectionResultOperationCompleted(object arg) {
            if ((this.ReceiveCollectionResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveCollectionResultCompleted(this, new ReceiveCollectionResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://americandatabank.com/ReceiveCollectionStatus", RequestNamespace="http://americandatabank.com/", ResponseNamespace="http://americandatabank.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReceiveCollectionStatus(string userName, string password, string collectionStatusXML) {
            object[] results = this.Invoke("ReceiveCollectionStatus", new object[] {
                        userName,
                        password,
                        collectionStatusXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveCollectionStatusAsync(string userName, string password, string collectionStatusXML) {
            this.ReceiveCollectionStatusAsync(userName, password, collectionStatusXML, null);
        }
        
        /// <remarks/>
        public void ReceiveCollectionStatusAsync(string userName, string password, string collectionStatusXML, object userState) {
            if ((this.ReceiveCollectionStatusOperationCompleted == null)) {
                this.ReceiveCollectionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveCollectionStatusOperationCompleted);
            }
            this.InvokeAsync("ReceiveCollectionStatus", new object[] {
                        userName,
                        password,
                        collectionStatusXML}, this.ReceiveCollectionStatusOperationCompleted, userState);
        }
        
        private void OnReceiveCollectionStatusOperationCompleted(object arg) {
            if ((this.ReceiveCollectionStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveCollectionStatusCompleted(this, new ReceiveCollectionStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://americandatabank.com/ReceiveLabTestResult", RequestNamespace="http://americandatabank.com/", ResponseNamespace="http://americandatabank.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReceiveLabTestResult(string userName, string password, string labResult) {
            object[] results = this.Invoke("ReceiveLabTestResult", new object[] {
                        userName,
                        password,
                        labResult});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveLabTestResultAsync(string userName, string password, string labResult) {
            this.ReceiveLabTestResultAsync(userName, password, labResult, null);
        }
        
        /// <remarks/>
        public void ReceiveLabTestResultAsync(string userName, string password, string labResult, object userState) {
            if ((this.ReceiveLabTestResultOperationCompleted == null)) {
                this.ReceiveLabTestResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveLabTestResultOperationCompleted);
            }
            this.InvokeAsync("ReceiveLabTestResult", new object[] {
                        userName,
                        password,
                        labResult}, this.ReceiveLabTestResultOperationCompleted, userState);
        }
        
        private void OnReceiveLabTestResultOperationCompleted(object arg) {
            if ((this.ReceiveLabTestResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveLabTestResultCompleted(this, new ReceiveLabTestResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://americandatabank.com/ReceiveLabReqStatus", RequestNamespace="http://americandatabank.com/", ResponseNamespace="http://americandatabank.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReceiveLabReqStatus(string userName, string password, string labReqStatus) {
            object[] results = this.Invoke("ReceiveLabReqStatus", new object[] {
                        userName,
                        password,
                        labReqStatus});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveLabReqStatusAsync(string userName, string password, string labReqStatus) {
            this.ReceiveLabReqStatusAsync(userName, password, labReqStatus, null);
        }
        
        /// <remarks/>
        public void ReceiveLabReqStatusAsync(string userName, string password, string labReqStatus, object userState) {
            if ((this.ReceiveLabReqStatusOperationCompleted == null)) {
                this.ReceiveLabReqStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveLabReqStatusOperationCompleted);
            }
            this.InvokeAsync("ReceiveLabReqStatus", new object[] {
                        userName,
                        password,
                        labReqStatus}, this.ReceiveLabReqStatusOperationCompleted, userState);
        }
        
        private void OnReceiveLabReqStatusOperationCompleted(object arg) {
            if ((this.ReceiveLabReqStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveLabReqStatusCompleted(this, new ReceiveLabReqStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ReceiveCollectionResultCompletedEventHandler(object sender, ReceiveCollectionResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveCollectionResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveCollectionResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ReceiveCollectionStatusCompletedEventHandler(object sender, ReceiveCollectionStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveCollectionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveCollectionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ReceiveLabTestResultCompletedEventHandler(object sender, ReceiveLabTestResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveLabTestResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveLabTestResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ReceiveLabReqStatusCompletedEventHandler(object sender, ReceiveLabReqStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveLabReqStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveLabReqStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591