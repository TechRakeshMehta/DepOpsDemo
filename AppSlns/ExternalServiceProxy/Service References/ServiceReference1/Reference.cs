//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExternalServiceProxy.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/ExternalServices")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComplianceItemDataContract", Namespace="http://schemas.datacontract.org/2004/07/ExternalServices.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ComplianceItemDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExternalServiceProxy.ServiceReference1.ComplianceIteAttributesmDataContract[] ComplianceItemAttributesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ComplianceItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExternalServiceProxy.ServiceReference1.ComplianceIteAttributesmDataContract[] ComplianceItemAttributes {
            get {
                return this.ComplianceItemAttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.ComplianceItemAttributesField, value) != true)) {
                    this.ComplianceItemAttributesField = value;
                    this.RaisePropertyChanged("ComplianceItemAttributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ComplianceItemId {
            get {
                return this.ComplianceItemIdField;
            }
            set {
                if ((this.ComplianceItemIdField.Equals(value) != true)) {
                    this.ComplianceItemIdField = value;
                    this.RaisePropertyChanged("ComplianceItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemLabel {
            get {
                return this.ItemLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemLabelField, value) != true)) {
                    this.ItemLabelField = value;
                    this.RaisePropertyChanged("ItemLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComplianceIteAttributesmDataContract", Namespace="http://schemas.datacontract.org/2004/07/ExternalServices.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ComplianceIteAttributesmDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ComplianceItemAttributeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttributeLabel {
            get {
                return this.AttributeLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeLabelField, value) != true)) {
                    this.AttributeLabelField = value;
                    this.RaisePropertyChanged("AttributeLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ComplianceItemAttributeId {
            get {
                return this.ComplianceItemAttributeIdField;
            }
            set {
                if ((this.ComplianceItemAttributeIdField.Equals(value) != true)) {
                    this.ComplianceItemAttributeIdField = value;
                    this.RaisePropertyChanged("ComplianceItemAttributeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RuleElementNodeContract", Namespace="http://schemas.datacontract.org/2004/07/ExternalServices.DataContracts")]
    [System.SerializableAttribute()]
    public partial class RuleElementNodeContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Entity.RuleElementNodeDataType NodeDataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NodeDisplayValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Entity.RuleElementNodeType NodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NodeValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Entity.RuleElementNodeDataType NodeDataType {
            get {
                return this.NodeDataTypeField;
            }
            set {
                if ((this.NodeDataTypeField.Equals(value) != true)) {
                    this.NodeDataTypeField = value;
                    this.RaisePropertyChanged("NodeDataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NodeDisplayValue {
            get {
                return this.NodeDisplayValueField;
            }
            set {
                if ((object.ReferenceEquals(this.NodeDisplayValueField, value) != true)) {
                    this.NodeDisplayValueField = value;
                    this.RaisePropertyChanged("NodeDisplayValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Entity.RuleElementNodeType NodeType {
            get {
                return this.NodeTypeField;
            }
            set {
                if ((this.NodeTypeField.Equals(value) != true)) {
                    this.NodeTypeField = value;
                    this.RaisePropertyChanged("NodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NodeValue {
            get {
                return this.NodeValueField;
            }
            set {
                if ((object.ReferenceEquals(this.NodeValueField, value) != true)) {
                    this.NodeValueField = value;
                    this.RaisePropertyChanged("NodeValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComplianceTimeSpanTypeDataContract", Namespace="http://schemas.datacontract.org/2004/07/ExternalServices.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ComplianceTimeSpanTypeDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ComplianceTimeSpanTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ComplianceTimeSpanTypeID {
            get {
                return this.ComplianceTimeSpanTypeIDField;
            }
            set {
                if ((this.ComplianceTimeSpanTypeIDField.Equals(value) != true)) {
                    this.ComplianceTimeSpanTypeIDField = value;
                    this.RaisePropertyChanged("ComplianceTimeSpanTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IComplianceRuleService")]
    public interface IComplianceRuleService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplianceRuleService/GetData", ReplyAction="http://tempuri.org/IComplianceRuleService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplianceRuleService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IComplianceRuleService/GetDataUsingDataContractResponse")]
        ExternalServiceProxy.ServiceReference1.CompositeType GetDataUsingDataContract(ExternalServiceProxy.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplianceRuleService/GetComplianceRuleConstantTypes", ReplyAction="http://tempuri.org/IComplianceRuleService/GetComplianceRuleConstantTypesResponse")]
        string[] GetComplianceRuleConstantTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplianceRuleService/GetComplianceItems", ReplyAction="http://tempuri.org/IComplianceRuleService/GetComplianceItemsResponse")]
        ExternalServiceProxy.ServiceReference1.ComplianceItemDataContract[] GetComplianceItems(int complianceCategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplianceRuleService/SaveComplianceItemRule", ReplyAction="http://tempuri.org/IComplianceRuleService/SaveComplianceItemRuleResponse")]
        void SaveComplianceItemRule(int complianceCategoryComplianceItemId, ExternalServiceProxy.ServiceReference1.RuleElementNodeContract[] lstRuleElementNodeContract, int currentUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplianceRuleService/GetRule", ReplyAction="http://tempuri.org/IComplianceRuleService/GetRuleResponse")]
        ExternalServiceProxy.ServiceReference1.RuleElementNodeContract[] GetRule(int complianceCategoryComplianceItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplianceRuleService/GetComplianceItem", ReplyAction="http://tempuri.org/IComplianceRuleService/GetComplianceItemResponse")]
        ExternalServiceProxy.ServiceReference1.ComplianceItemDataContract GetComplianceItem(int complianceItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplianceRuleService/GetComplianceTimeSpanTypes", ReplyAction="http://tempuri.org/IComplianceRuleService/GetComplianceTimeSpanTypesResponse")]
        ExternalServiceProxy.ServiceReference1.ComplianceTimeSpanTypeDataContract[] GetComplianceTimeSpanTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplianceRuleService/ValidateRule", ReplyAction="http://tempuri.org/IComplianceRuleService/ValidateRuleResponse")]
        bool ValidateRule(ExternalServiceProxy.ServiceReference1.RuleElementNodeContract[] lstRuleElementNodeContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplianceRuleService/AddComplianceItemAttributeExpression", ReplyAction="http://tempuri.org/IComplianceRuleService/AddComplianceItemAttributeExpressionRes" +
            "ponse")]
        bool AddComplianceItemAttributeExpression(int complianceItemAttributeID, ExternalServiceProxy.ServiceReference1.RuleElementNodeContract[] lstRuleElementNodeContract);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IComplianceRuleServiceChannel : ExternalServiceProxy.ServiceReference1.IComplianceRuleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ComplianceRuleServiceClient : System.ServiceModel.ClientBase<ExternalServiceProxy.ServiceReference1.IComplianceRuleService>, ExternalServiceProxy.ServiceReference1.IComplianceRuleService {
        
        public ComplianceRuleServiceClient() {
        }
        
        public ComplianceRuleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ComplianceRuleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ComplianceRuleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ComplianceRuleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public ExternalServiceProxy.ServiceReference1.CompositeType GetDataUsingDataContract(ExternalServiceProxy.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public string[] GetComplianceRuleConstantTypes() {
            return base.Channel.GetComplianceRuleConstantTypes();
        }
        
        public ExternalServiceProxy.ServiceReference1.ComplianceItemDataContract[] GetComplianceItems(int complianceCategoryId) {
            return base.Channel.GetComplianceItems(complianceCategoryId);
        }
        
        public void SaveComplianceItemRule(int complianceCategoryComplianceItemId, ExternalServiceProxy.ServiceReference1.RuleElementNodeContract[] lstRuleElementNodeContract, int currentUserId) {
            base.Channel.SaveComplianceItemRule(complianceCategoryComplianceItemId, lstRuleElementNodeContract, currentUserId);
        }
        
        public ExternalServiceProxy.ServiceReference1.RuleElementNodeContract[] GetRule(int complianceCategoryComplianceItemId) {
            return base.Channel.GetRule(complianceCategoryComplianceItemId);
        }
        
        public ExternalServiceProxy.ServiceReference1.ComplianceItemDataContract GetComplianceItem(int complianceItemId) {
            return base.Channel.GetComplianceItem(complianceItemId);
        }
        
        public ExternalServiceProxy.ServiceReference1.ComplianceTimeSpanTypeDataContract[] GetComplianceTimeSpanTypes() {
            return base.Channel.GetComplianceTimeSpanTypes();
        }
        
        public bool ValidateRule(ExternalServiceProxy.ServiceReference1.RuleElementNodeContract[] lstRuleElementNodeContract) {
            return base.Channel.ValidateRule(lstRuleElementNodeContract);
        }
        
        public bool AddComplianceItemAttributeExpression(int complianceItemAttributeID, ExternalServiceProxy.ServiceReference1.RuleElementNodeContract[] lstRuleElementNodeContract) {
            return base.Channel.AddComplianceItemAttributeExpression(complianceItemAttributeID, lstRuleElementNodeContract);
        }
    }
}
